{"version":3,"file":"static/js/972.c80b4d2f.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/pages/Grid/customgrid.module.css?17f6","pages/Grid/data.js","pages/Grid/About.tsx","webpack://portfolio/./src/pages/Grid/about.module.css?716d","pages/Grid/CustomGrid.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info\":\"customgrid_info__YalIR\",\"grid\":\"customgrid_grid__KPPtC\",\"readOnlyTxt\":\"customgrid_readOnlyTxt__9OfRl\",\"onEmpty\":\"customgrid_onEmpty__C596K\",\"jsonView\":\"customgrid_jsonView__39pBR\",\"jsonHdr\":\"customgrid_jsonHdr__yJUTS\",\"infoTxt\":\"customgrid_infoTxt__zVF5u\",\"arrowIconDes\":\"customgrid_arrowIconDes__bNyek\",\"arrowIconAsc\":\"customgrid_arrowIconAsc__vYy7Z\",\"username\":\"customgrid_username__wVEt4\",\"field\":\"customgrid_field__TCcjl\",\"selRow\":\"customgrid_selRow__KLzy-\",\"deleteIcon\":\"customgrid_deleteIcon__zcwGf\",\"pageContainer\":\"customgrid_pageContainer__y4jzF\",\"search\":\"customgrid_search__T6WEP\",\"searchInput\":\"customgrid_searchInput__wEiLF\"};","export const usersListArr =[\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"Leanne Graham\",\r\n      \"username\": \"Bret\",\r\n      \"email\": \"Sincere@april.biz\",\r\n      \"cbchecked\":false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"Ervin Howell\",\r\n      \"username\": \"Antonette\",\r\n      \"email\": \"Shanna@melissa.tv\",\r\n      \"cbchecked\":false\r\n    \r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"Clementine Bauch\",\r\n      \"username\": \"Samantha\",\r\n      \"email\": \"Nathan@yesenia.net\",\r\n      \"cbchecked\":false\r\n    \r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"name\": \"Patricia Lebsack\",\r\n      \"username\": \"Karianne\",\r\n      \"email\": \"Julianne.OConner@kory.org\",\r\n      \"cbchecked\":false\r\n     \r\n    },\r\n    {\r\n      \"id\": 5,\r\n      \"name\": \"Chelsey Dietrich\",\r\n      \"username\": \"Kamren\",\r\n      \"email\": \"Lucio_Hettinger@annie.ca\",\r\n      \"cbchecked\":false\r\n     \r\n    },\r\n    {\r\n      \"id\": 6,\r\n      \"name\": \"Mrs. Dennis Schulist\",\r\n      \"username\": \"Leopoldo_Corkery\",\r\n      \"email\": \"Karley_Dach@jasper.info\",\r\n      \"cbchecked\":false\r\n     \r\n    },\r\n    {\r\n      \"id\": 7,\r\n      \"name\": \"Kurtis Weissnat\",\r\n      \"username\": \"Elwyn.Skiles\",\r\n      \"email\": \"Telly.Hoeger@billy.biz\",\r\n      \"cbchecked\":false\r\n     \r\n    },\r\n    {\r\n      \"id\": 8,\r\n      \"name\": \"Nicholas Runolfsdottir V\",\r\n      \"username\": \"Maxime_Nienow\",\r\n      \"email\": \"Sherwood@rosamond.me\",\r\n      \"cbchecked\":false\r\n    \r\n    },\r\n    {\r\n      \"id\": 9,\r\n      \"name\": \"Glenna Reichert\",\r\n      \"username\": \"Delphine\",\r\n      \"email\": \"Chaim_McDermott@dana.io\",\r\n      \"cbchecked\":false\r\n     \r\n    },\r\n    {\r\n      \"id\": 10,\r\n      \"name\": \"Clementina DuBuque\",\r\n      \"username\": \"Moriah.Stanton\",\r\n      \"email\": \"Rey.Padberg@karina.biz\",\r\n      \"cbchecked\":false\r\n    \r\n    }\r\n  ]","import { useState } from 'react'\r\nimport styles from './about.module.css'\r\n\r\nconst { aboutContainer, aboutHeader, arrow, aboutContent, blue } = styles\r\n\r\nfunction About() {\r\n  const [state, setState] = useState({\r\n    aboutHidden: true,\r\n  })\r\n\r\n  function toggleContent() {\r\n    setState((prevState) => {\r\n      return {\r\n        aboutHidden: !prevState.aboutHidden,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={aboutContainer}>\r\n        <div onClick={toggleContent}>\r\n          {state.aboutHidden && <span className={arrow}>▶</span>}\r\n          {!state.aboutHidden && <span className={arrow}>▼</span>}\r\n          <span className={aboutHeader}>Custom Grid App</span>\r\n        </div>\r\n        {!state.aboutHidden && (\r\n          <div className={aboutContent}>\r\n            <p>\r\n           \r\n             This web-based app is developed in{' '}\r\n                <span className={blue}>ReactJs</span> with TypeScript and <span className={blue}>CSS Grid.</span>\r\n            </p>\r\n            <p>\r\n          Users can edit the field by directly clicking on the required cell.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutContainer\":\"about_aboutContainer__p6zlM\",\"aboutContent\":\"about_aboutContent__VQ+JN\",\"aboutHeader\":\"about_aboutHeader__rZHNC\",\"arrow\":\"about_arrow__bZZZc\",\"codeLink\":\"about_codeLink__YWlKb\",\"blue\":\"about_blue__XrVgu\"};","import React, { Fragment, useEffect, useRef, useState } from 'react'\r\nimport styles from './customgrid.module.css'\r\nimport { usersListArr } from './data'\r\nimport About from './About'\r\n\r\nconst CustomGrid = () => {\r\n  const [state, setState] = useState({\r\n    refreshBool: false,\r\n    userInputTxt: '',\r\n    editedId: 0,\r\n    allChecked: false,\r\n    filtered: false,\r\n    editedObj: {\r\n      id: ' ',\r\n      skill: ' ',\r\n      experience: ' ',\r\n      rate: 0,\r\n    },\r\n    editedElement: '',\r\n    originalUsersList: [...usersListArr],\r\n    usersListArr,\r\n    filteredUsersList: [],\r\n    allchecked: false,\r\n    unsortedListArr: [...usersListArr],\r\n    sortOrder: 'def',\r\n    orderNum: 0,\r\n    sortedField: '',\r\n  })\r\n\r\n  const openEdit = (e: React.MouseEventHandler<HTMLSpanElement> | any) => {\r\n    const tempState = { ...state }\r\n    const editedId = e.target.id\r\n    const editedElement = e.currentTarget.getAttribute('data-name')\r\n    const editedObj = tempState.usersListArr.find((usersListObj) => {\r\n      return parseInt(e.target.id) === usersListObj.id\r\n    })\r\n\r\n    setState((prevState: any) => {\r\n      return {\r\n        ...prevState,\r\n        editedId,\r\n        editedObj,\r\n        editedElement,\r\n      }\r\n    })\r\n  }\r\n\r\n  const updateRow = (e: any) => {\r\n    const tempState = { ...state }\r\n    const theElement: any = state.editedElement\r\n    const theObj: any = tempState.editedObj\r\n    theObj[theElement] = e.target.value\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        usersListArr: tempState.usersListArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEnter = (e: any) => {\r\n    if (e.code === 'Enter') {\r\n      e.currentTarget.blur()\r\n    }\r\n  }\r\n\r\n  const addUser = () => {\r\n    const tempState: any = { ...state }\r\n    const usersArr = tempState.usersListArr\r\n    const lastUserArr = usersArr[usersArr.length - 1]\r\n\r\n    if (\r\n      lastUserArr.name.trim().length === 0 ||\r\n      lastUserArr.email.trim().length === 0 ||\r\n      lastUserArr.username.trim().length === 0\r\n    ) {\r\n      alert('Please add a user.')\r\n      return\r\n    }\r\n\r\n    const newUserObj = {\r\n      id:\r\n        !usersArr || usersArr.length === 0\r\n          ? 1\r\n          : usersArr[usersArr.length - 1].id + 1,\r\n      name: ' ',\r\n      username: ' ',\r\n      email: ' ',\r\n    }\r\n    const usersListArr = [...tempState.usersListArr, newUserObj]\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        usersListArr,\r\n        filtered:false\r\n      }\r\n    })\r\n    console.log(\"added \", state)\r\n  }\r\n\r\n  const deleteUser = (e: any) => {\r\n    const tempState = { ...state }\r\n    const userArr = tempState.usersListArr\r\n    let usersListArr: any\r\n    if (userArr.length === 1) {\r\n      userArr[0].id = 1\r\n      userArr[0].name = ' '\r\n      userArr[0].username = ' '\r\n      userArr[0].email = ' '\r\n      usersListArr = userArr\r\n    } else {\r\n      usersListArr = userArr.filter((row) => {\r\n        return row.id !== parseInt(e.target.id)\r\n      })\r\n    }\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        usersListArr,\r\n        filtered:false\r\n      }\r\n    })\r\n  }\r\n\r\n  const sortGrid = (e: any) => {\r\n    const tempState = { ...state }\r\n    const field: string = e.target.id\r\n\r\n    let updatedSortOrder = 'def',\r\n      orderNum = 0\r\n\r\n    if (state.sortOrder === 'def') {\r\n      orderNum = 1\r\n      updatedSortOrder = 'asc'\r\n    } else if (state.sortOrder === 'asc') {\r\n      orderNum = -1\r\n      updatedSortOrder = 'des'\r\n    } else if (state.sortOrder === 'des') {\r\n      orderNum = 0\r\n      updatedSortOrder = 'def'\r\n    }\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        sortOrder: updatedSortOrder,\r\n        sortedField: field,\r\n      }\r\n    })\r\n    if (updatedSortOrder !== 'def') {\r\n      tempState[state.filtered ? 'filteredUsersList' : 'usersListArr'].sort(\r\n        (a: any, b: any) => {\r\n          if (a[field] < b[field]) return -1 * orderNum\r\n          else if (a[field] > b[field]) return 1 * orderNum\r\n          else return 0\r\n        },\r\n      )\r\n    }\r\n\r\n    const usersListArr =\r\n      updatedSortOrder === 'def'\r\n        ? [...tempState.unsortedListArr]\r\n        : tempState[state.filtered ? 'filteredUsersList' : 'usersListArr']\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        refreshBool: !prevState.refreshBool,\r\n        usersListArr,\r\n        filtered: false,\r\n        sortOrder: updatedSortOrder,\r\n      }\r\n    })\r\n  }\r\n\r\n  const selectAll = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const tempState = { ...state }\r\n    tempState.allChecked = !tempState.allChecked\r\n    const auto = tempState.usersListArr\r\n    let allCheck = false\r\n    let checkedVal: boolean = state.allChecked === true ? true : false\r\n\r\n    if (checkedVal) {\r\n      allCheck = false\r\n    } else {\r\n      allCheck = true\r\n    }\r\n\r\n    auto.forEach((row) => {\r\n      row.cbchecked = allCheck\r\n    })\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        allChecked: tempState.allChecked,\r\n        auto,\r\n      }\r\n    })\r\n  }\r\n\r\n  const rowCheck = (e: React.ChangeEvent<HTMLInputElement> | any) => {\r\n    const tempState = { ...state }\r\n    const auto = tempState.usersListArr\r\n\r\n    const selectedRow = auto.find((row) => {\r\n      return row.id === parseInt(e.target.id)\r\n    })\r\n\r\n    if (selectedRow) {\r\n      selectedRow.cbchecked = !selectedRow?.cbchecked\r\n    }\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        auto,\r\n      }\r\n    })\r\n  }\r\n\r\n  type UsersListArr = {\r\n    id: number\r\n    name: string\r\n    username: string\r\n    email: string\r\n    cbchecked: boolean\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    const tempState={...state};\r\n    const usersListArr=tempState.usersListArr;\r\n\r\n    const filteredUsersList = usersListArr.filter((row) => {\r\n      return (\r\n        row.name.toLowerCase().includes(state.userInputTxt.toLowerCase()) ||\r\n        row.username.toLowerCase().includes(state.userInputTxt.toLowerCase()) ||\r\n        row.email.toLowerCase().includes(state.userInputTxt.toLowerCase())\r\n      )\r\n    })\r\n\r\n    setState((prevState: any) => {\r\n      return {\r\n        ...prevState,\r\n        filteredUsersList,\r\n        filtered: true,\r\n      }\r\n    })\r\n  }\r\n\r\n  const userInputRef=useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    const timerHandler = setTimeout(() => {\r\n      handleSearch()\r\n    }, 500)\r\n\r\n    return () => {\r\n      clearTimeout(timerHandler)\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          filtered: false,\r\n        }\r\n      });\r\n      // if (userInputRef.current)\r\n      // userInputRef.current.focus();\r\n    }\r\n  }, [state.userInputTxt])\r\n\r\n  const getUserInputTxt = (e: any) => {\r\n    const tempState = { ...state }\r\n    const tempUserInputTxt = tempState.userInputTxt\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        userInputTxt: e.target.value,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={pageContainer}>\r\n      <About />\r\n      <div className={info}></div>\r\n      <p className={infoTxt}>\r\n        To edit, just click on the cell, then use left/right arrow for\r\n        correction or start typing to replace the entire text. Once editing is\r\n        complete, just press Enter or click outside the cell. You can also sort and search the grid.\r\n        To add a new user, click on the Add button, then click on the first empty cell of the newly\r\n        added row, type the text and press tab key to go to the next column.\r\n      </p>\r\n\r\n      <div\r\n        style={{\r\n          marginTop: 15,\r\n          display: 'flex',\r\n          justifyContent: 'right',\r\n        }}\r\n      >\r\n        <label className={search}>Search</label>\r\n        <input\r\n         ref={userInputRef}\r\n          className={searchInput}\r\n          placeholder=\"Type a text to search\"\r\n          type=\"text\"\r\n          onChange={getUserInputTxt}\r\n        />\r\n      </div>\r\n      <div id=\"grid\" className={grid}>\r\n        <div>\r\n          <input\r\n            id=\"selectAll\"\r\n            checked={state.allChecked}\r\n            onChange={selectAll}\r\n            type=\"checkbox\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${field} ${\r\n            state.sortedField === 'name' &&\r\n            (state.sortOrder === 'asc'\r\n              ? arrowIconAsc\r\n              : state.sortOrder === 'des'\r\n              ? arrowIconDes\r\n              : '')\r\n          }`}\r\n          id=\"name\"\r\n          onClick={sortGrid}\r\n        >\r\n          Name\r\n        </div>\r\n        <div\r\n          className={`${field} ${\r\n            state.sortedField === 'username' &&\r\n            (state.sortOrder === 'asc'\r\n              ? arrowIconAsc\r\n              : state.sortOrder === 'des'\r\n              ? arrowIconDes\r\n              : '')\r\n          }`}\r\n          id=\"username\"\r\n          onClick={sortGrid}\r\n        >\r\n          Username\r\n        </div>\r\n        <div\r\n          className={`${field} ${\r\n            state.sortedField === 'email' &&\r\n            (state.sortOrder === 'asc'\r\n              ? arrowIconAsc\r\n              : state.sortOrder === 'des'\r\n              ? arrowIconDes\r\n              : '')\r\n          }`}\r\n          id=\"email\"\r\n          onClick={sortGrid}\r\n        >\r\n          E-Mail\r\n        </div>\r\n        <div>Action</div>\r\n\r\n        {state[state.filtered ? 'filteredUsersList' : 'usersListArr'].map(\r\n          (\r\n            {\r\n              id,\r\n              name,\r\n              username,\r\n              email,\r\n              cbchecked,\r\n            }: {\r\n              id: number\r\n              name: string\r\n              username: string\r\n              email: string\r\n              cbchecked: boolean\r\n            },\r\n            index,\r\n          ) => {\r\n            const rowId: string = id.toString()\r\n            return (\r\n              <Fragment key={rowId}>\r\n                <>\r\n                  <div\r\n                    id={rowId}\r\n                    onClick={rowCheck}\r\n                    className={cbchecked ? selRow : ''}\r\n                  >\r\n                    <input\r\n                      id={id.toString()}\r\n                      data-index={index}\r\n                      onChange={() => false}\r\n                      type=\"checkbox\"\r\n                      checked={cbchecked}\r\n                    />\r\n                  </div>\r\n                  <div className={cbchecked ? selRow : ''}>\r\n                    {!(\r\n                      state.editedId.toString() === rowId &&\r\n                      state.editedElement === 'name'\r\n                    ) && (\r\n                      <span\r\n                        onFocus={(e) => e.currentTarget.click()}\r\n                        tabIndex={0}\r\n                        data-name=\"name\"\r\n                        id={rowId}\r\n                        onClick={openEdit}\r\n                      >\r\n                        &nbsp;\r\n                        {name}\r\n                      </span>\r\n                    )}\r\n                    {state.editedId.toString() === rowId &&\r\n                      state.editedElement === 'name' && (\r\n                        <span>\r\n                          <input\r\n                            tabIndex={0}\r\n                            onKeyUp={handleEnter}\r\n                            onChange={updateRow}\r\n                            onFocus={(e) => e.target.select()}\r\n                            autoFocus\r\n                            data-name=\"name\"\r\n                            type=\"text\"\r\n                            value={name}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n                  <div className={cbchecked ? selRow : ''}>\r\n                    {!(\r\n                      state.editedId.toString() === rowId &&\r\n                      state.editedElement === 'username'\r\n                    ) && (\r\n                      <span\r\n                        className={readOnlyTxt}\r\n                        onFocus={(e) => e.currentTarget.click()}\r\n                        tabIndex={0}\r\n                        id={rowId}\r\n                        onClick={openEdit}\r\n                        data-name=\"username\"\r\n                      >\r\n                        &nbsp;\r\n                        {username}\r\n                      </span>\r\n                    )}\r\n                    {state.editedId.toString() === rowId &&\r\n                      state.editedElement === 'username' && (\r\n                        <span>\r\n                          <input\r\n                            tabIndex={0}\r\n                            onKeyUp={handleEnter}\r\n                            onChange={updateRow}\r\n                            onFocus={(e) => e.target.select()}\r\n                            autoFocus\r\n                            data-name=\"username\"\r\n                            type=\"text\"\r\n                            value={username}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className={cbchecked ? selRow : ''}>\r\n                    {!(\r\n                      state.editedId.toString() === rowId &&\r\n                      state.editedElement === 'email'\r\n                    ) && (\r\n                      <span\r\n                        tabIndex={0}\r\n                        onFocus={(e) => e.currentTarget.click()}\r\n                        className={readOnlyTxt}\r\n                        id={rowId}\r\n                        onClick={openEdit}\r\n                        data-name=\"email\"\r\n                      >\r\n                        &nbsp;{email}\r\n                      </span>\r\n                    )}\r\n                    {state.editedId.toString() === rowId &&\r\n                      state.editedElement === 'email' && (\r\n                        <span>\r\n                          <input\r\n                            tabIndex={0}\r\n                            onKeyUp={handleEnter}\r\n                            onChange={updateRow}\r\n                            onFocus={(e) => e.target.select()}\r\n                            autoFocus\r\n                            data-name=\"email\"\r\n                            type=\"text\"\r\n                            value={email}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n                  <div className={cbchecked ? selRow : ''}>\r\n                    <span\r\n                      id={rowId}\r\n                      className={deleteIcon}\r\n                      onClick={deleteUser}\r\n                    >\r\n                      🗑️\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              </Fragment>\r\n            )\r\n          },\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: 15,\r\n          display: 'flex',\r\n          justifyContent: 'right',\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            cursor: 'pointer',\r\n            width: 150,\r\n            padding: '7px 10px',\r\n            border: 'none',\r\n            borderRadius:6,\r\n            color: '#fff',\r\n            backgroundColor: '#4681f4',\r\n          }}\r\n          onClick={addUser}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      <div className={jsonHdr}>JSON data of the above grid</div>\r\n      <div className={jsonView}>\r\n        <pre>\r\n          {JSON.stringify(\r\n            state[state.filtered ? 'filteredUsersList' : 'usersListArr'],\r\n            null,\r\n            3,\r\n          )}\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst {\r\n  grid,\r\n  readOnlyTxt,\r\n  info,\r\n  jsonView,\r\n  jsonHdr,\r\n  infoTxt,\r\n  field,\r\n  arrowIconDes,\r\n  arrowIconAsc,\r\n  deleteIcon,\r\n  selRow,\r\n  pageContainer,\r\n  search,\r\n  searchInput,\r\n} = styles\r\n\r\nexport default CustomGrid\r\n"],"names":["usersListArr","aboutContainer","aboutHeader","arrow","aboutContent","blue","state","setState","useState","aboutHidden","_jsx","_Fragment","children","_jsxs","className","onClick","prevState","grid","readOnlyTxt","info","jsonView","jsonHdr","infoTxt","field","arrowIconDes","arrowIconAsc","deleteIcon","selRow","pageContainer","search","searchInput","CustomGrid","refreshBool","userInputTxt","editedId","allChecked","filtered","editedObj","id","skill","experience","rate","editedElement","originalUsersList","filteredUsersList","allchecked","unsortedListArr","sortOrder","orderNum","sortedField","openEdit","e","tempState","target","currentTarget","getAttribute","find","usersListObj","parseInt","updateRow","theElement","value","handleEnter","code","blur","deleteUser","userArr","length","name","username","email","filter","row","sortGrid","updatedSortOrder","sort","a","b","rowCheck","auto","selectedRow","cbchecked","userInputRef","useRef","useEffect","timerHandler","setTimeout","handleSearch","toLowerCase","includes","clearTimeout","About","style","marginTop","display","justifyContent","ref","placeholder","type","onChange","checked","allCheck","checkedVal","forEach","map","_ref","index","rowId","toString","Fragment","onFocus","click","tabIndex","onKeyUp","select","autoFocus","cursor","width","padding","border","borderRadius","color","backgroundColor","addUser","usersArr","lastUserArr","trim","alert","newUserObj","console","log","JSON","stringify"],"sourceRoot":""}