{"version":3,"file":"static/js/642.fdfd474f.chunk.js","mappings":"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","sources":["pages/stickynotes/About.tsx","webpack://portfolio/./src/pages/stickynotes/about.module.css?3fbb","pages/stickynotes/useStickyNotes.ts","pages/stickynotes/Stickynotes.tsx","webpack://portfolio/./src/pages/stickynotes/stickynotes.module.css?9d4c"],"sourcesContent":["import { useState } from 'react'\r\nimport styles from './about.module.css'\r\n\r\nconst { aboutContainer, aboutHeader, arrow, aboutContent } = styles\r\n\r\nfunction About({aboutHidden}:{aboutHidden:boolean}) {\r\n  const [state, setState] = useState({\r\n    aboutHidden\r\n  })\r\n\r\n  function toggleContent() {\r\n    setState((prevState) => {\r\n      return {\r\n        aboutHidden: !prevState.aboutHidden,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={aboutContainer}>\r\n        <div onClick={toggleContent}>\r\n          {state.aboutHidden && <span className={arrow}>▶</span>}\r\n          {!state.aboutHidden && <span className={arrow}>▼</span>}\r\n          <span className={aboutHeader}>Sticky Notes App Info</span>\r\n        </div>\r\n        {!state.aboutHidden && (\r\n          <div className={aboutContent}>\r\n            <p>\r\n              <strong>\r\n                This is a Sticky Notes app developed in{' '}\r\n                <span style={{ color: 'blue' }}>ReactJs</span> with TypeScript.\r\n              </strong>\r\n            </p>\r\n            <ul>\r\n              <li><strong>Add a Sticky Note</strong>: Click on Add Sticky Note </li>\r\n              <li><strong>Write a Note</strong>: Just click inside the sticky note and start writing</li>\r\n              <li><strong>Save the Note</strong>: Just click outside the sticky note. Now navigate away or refresh the page</li>\r\n              <li><strong>Delete a Note</strong>: Just double click on a sticky note and confirm</li>\r\n              <li><strong>Remove all Sticky Notes:</strong>Click on the Remove all Sticky Notes link</li>\r\n            </ul>\r\n           \r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutContainer\":\"about_aboutContainer__RcZJh\",\"aboutContent\":\"about_aboutContent__0u0Lj\",\"aboutHeader\":\"about_aboutHeader__cg5Fo\",\"arrow\":\"about_arrow__IvC0b\",\"codeLink\":\"about_codeLink__XXaUW\"};","import React, { useEffect, useState } from \"react\";\r\nimport { STATE, StickyNote } from \"./types\";\r\n\r\nexport const useStickyNotes = () => {\r\n  \r\n  const [state, setState] = useState<STATE>({\r\n    stickynotes: [\r\n      {\r\n        id: \"1\",\r\n        color: \"f9fa46\",\r\n        notes: `React application that mimics the classic sticky note experience. \r\n          Just try adding a note, click outside to save and double click to delete`,\r\n        tiltdeg: \"-2\",\r\n        notefull: false,\r\n      },\r\n    ],\r\n    editmode: false,\r\n    draggedItem: {},\r\n    writable: true,\r\n  });\r\n\r\n  let dragItemId: any;\r\n\r\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: string) => {\r\n    dragItemId = id;\r\n\r\n    const draggedItem = state.stickynotes.find((item) => {\r\n      return item.id === id;\r\n    });\r\n\r\n    const { target } = e;\r\n    if (target instanceof HTMLElement) {\r\n      const classList = target.classList; // DOMTokenList\r\n      classList.remove(\"redsquare\");\r\n    }\r\n\r\n    setState((prev: any) => {\r\n      return {\r\n        ...prev,\r\n        draggedItem,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: string) => {\r\n    const { target } = e;\r\n    if (target instanceof HTMLElement) {\r\n      const classList = target.classList; // DOMTokenList\r\n      classList.remove(\"redsquare\");\r\n    }\r\n\r\n    const tempState: any = { ...state };\r\n\r\n    const draggedIndex = state.stickynotes.findIndex((item) => {\r\n      return item.id === state.draggedItem.id;\r\n    });\r\n\r\n    const droppedIndex = state.stickynotes.findIndex((item) => {\r\n      return item.id === id;\r\n    });\r\n\r\n    const droppedItem = state.stickynotes.find((item) => {\r\n      return item.id === id;\r\n    });\r\n\r\n    tempState.stickynotes.splice(droppedIndex, 1, tempState.draggedItem);\r\n    tempState.stickynotes.splice(draggedIndex, 1, droppedItem);\r\n\r\n    //  e.target?.classList.remove('redsquare')\r\n\r\n    setState((prevState) => {\r\n      localStorage.setItem(\"state\", JSON.stringify(prevState));\r\n      return {\r\n        ...prevState,\r\n        stickynotes: tempState.stickynotes,\r\n      };\r\n    });\r\n  };\r\n\r\n  const saveNote = (e: any) => {\r\n    setState((prevState: any) => {\r\n      const tempState = { ...prevState };\r\n\r\n      const selectedStickyNote = tempState.stickynotes.find(\r\n        (stickynote: StickyNote) => {\r\n          return stickynote.id === e.target.id;\r\n        }\r\n      );\r\n\r\n      selectedStickyNote.notes = e.target.innerText;\r\n\r\n      localStorage.setItem(\"state\", JSON.stringify(prevState));\r\n\r\n      return {\r\n        ...prevState,\r\n        stickynotes: [...prevState.stickynotes],\r\n      };\r\n    });\r\n  };\r\n\r\n  const genRandomNum = (min: number, max: number) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const addNote = () => {\r\n    if (state.stickynotes.length >= 30) {\r\n      alert(\"You have reached the maximum of 30 sticky notes\");\r\n      return;\r\n    }\r\n\r\n    const noteColors = [\r\n      \"fff9b1\",\r\n      \"daf7a1\",\r\n      \"ffcc00\",\r\n      \"c9df56\",\r\n      \"ff9d48\",\r\n      \"b6d7a8\",\r\n      \"77ccc7\",\r\n      \"eca2c4\",\r\n      \"6ed8fa\",\r\n      \"ffcee0\",\r\n      \"b1d3f6\",\r\n      \"eae902\",\r\n      \"fcb38a\",\r\n      \"f9fa46\",\r\n    ];\r\n\r\n    const tilts = [-1, 5, -2, 4, -3, 3, -4, 2, -5, 1];\r\n\r\n    const tiltdeg = tilts[genRandomNum(0, tilts.length - 1)].toString();\r\n    const color = noteColors[genRandomNum(0, noteColors.length - 1)].toString();\r\n\r\n    const tempStickynotes = [...state.stickynotes];\r\n    tempStickynotes.sort((a, b) => Number(a.id) - Number(b.id));\r\n\r\n    const lastId = String(\r\n      parseInt(tempStickynotes[tempStickynotes.length - 1]?.id) + 1\r\n    );\r\n    const stickynote: StickyNote = {\r\n      id: state.stickynotes.length === 0 ? \"1\" : lastId,\r\n      color,\r\n      notes: \"\",\r\n      tiltdeg,\r\n      notefull: false,\r\n    };\r\n\r\n    setState((prevState) => {\r\n      prevState.stickynotes = [...prevState.stickynotes, stickynote];\r\n      return {\r\n        ...prevState,\r\n        writable: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let lsString: any = localStorage?.getItem(\"state\");\r\n    let localState: Storage = JSON.parse(lsString);\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        ...localState,\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const removestickynotes = () => {\r\n    const ans = window.confirm(\r\n      \"Are you sure you want to remove all sticky notes?\"\r\n    );\r\n    if (ans) {\r\n      localStorage.removeItem(\"state\");\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          stickynotes: [],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteNote = (e: any) => {\r\n    let updatedStickyNotes: any = \"\",\r\n      response = false;\r\n\r\n    if (!state.writable) {\r\n      response = window.confirm(\"Do you want to delete this Sticky Note?\");\r\n    }\r\n    if (response) {\r\n      const tempState = { ...state };\r\n      const stickynotes = tempState.stickynotes.filter((stickynote) => {\r\n        return stickynote.id !== e.target.id;\r\n      });\r\n      setState((prevState) => {\r\n        localStorage.setItem(\r\n          \"state\",\r\n          JSON.stringify({\r\n            ...prevState,\r\n            stickynotes,\r\n          })\r\n        );\r\n        return {\r\n          ...prevState,\r\n          stickynotes,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSwitch = (mode: string) => {\r\n    let writable = false;\r\n    if (mode === \"d\") {\r\n      writable = false;\r\n    } else if (mode === \"e\") {\r\n      writable = true;\r\n    } else {\r\n      writable = !state.writable;\r\n    }\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        writable,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleKeyDown = (e: any) => {\r\n    if (e.key === \"Enter\") e.preventDefault();\r\n  };\r\n\r\n  return {\r\n    state,\r\n    handleKeyDown,\r\n    handleSwitch,\r\n    deleteNote,\r\n    removestickynotes,\r\n    addNote,\r\n    saveNote,\r\n    handleDrop,\r\n    handleDragStart,\r\n  };\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport styles from \"./stickynotes.module.css\";\r\nimport About from \"./About\";\r\nimport { Switch } from \"@mui/material\";\r\nimport { useStickyNotes } from \"./useStickyNotes\";\r\nimport { StickyNote } from \"./types\";\r\n\r\nconst Stickynotes = () => {\r\n  \r\n  const {\r\n    state,\r\n    handleKeyDown,\r\n    handleSwitch,\r\n    deleteNote,\r\n    removestickynotes,\r\n    addNote,\r\n    saveNote,\r\n    handleDrop,\r\n    handleDragStart,\r\n  } = useStickyNotes();\r\n\r\n  return (\r\n    <>\r\n      <About aboutHidden={true} />\r\n      <div className={container}>\r\n        <div className={buttons}>\r\n          <button className={`${stickybtns} ${addnote}`} onClick={addNote}>\r\n            Add Sticky Note\r\n          </button>\r\n          <div className={rwmode}>\r\n            <span onClick={() => handleSwitch(\"d\")} className={enableEditTxt}>\r\n              Drag/Drop\r\n            </span>\r\n            <Switch\r\n              checked={state.writable}\r\n              onChange={() => handleSwitch(\"s\")}\r\n              color=\"default\"\r\n              inputProps={{ \"aria-label\": \"Edit Toggle\" }}\r\n            />{\" \"}\r\n            {\r\n              <span\r\n                onClick={() => handleSwitch(\"e\")}\r\n                className={disableEditTxt}\r\n              >\r\n                Edit Mode\r\n              </span>\r\n            }\r\n            <div className={`${removenote}`} onClick={removestickynotes}>\r\n              Remove All Sticky Notes\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={grid}>\r\n          {state.stickynotes.map(\r\n            ({ id, notes, color, tiltdeg }: StickyNote) => {\r\n              const tiltangle = `rotate(${tiltdeg}deg)`;\r\n              return (\r\n                <Fragment key={id}>\r\n                  <div\r\n                    role=\"note\"\r\n                    draggable={!state.writable}\r\n                    onDragStart={(e) => handleDragStart(e, id)}\r\n                    onDrop={(e) => handleDrop(e, id)}\r\n                    onDoubleClick={deleteNote}\r\n                    onDragOver={(e) => e.preventDefault()}\r\n                    id={id}\r\n                    style={{\r\n                      transform: tiltangle,\r\n                      backgroundColor: `#${color}`,\r\n                    }}\r\n                    onFocus={() => (state.editmode = true)}\r\n                    onBlur={saveNote}\r\n                    contentEditable={state.writable}\r\n                    onKeyDown={handleKeyDown}\r\n                    suppressContentEditableWarning={true}\r\n                    className={stickynote}\r\n                    title={\r\n                      state.writable\r\n                        ? \"Just Click and Start Writing\"\r\n                        : \"Mouse Left Button Down, Drag and Drop\"\r\n                    }\r\n                  >\r\n                    {notes}\r\n                  </div>\r\n                </Fragment>\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst {\r\n  stickynote,\r\n  grid,\r\n  container,\r\n  stickybtns,\r\n  addnote,\r\n  removenote,\r\n  buttons,\r\n  disableEditTxt,\r\n  enableEditTxt,\r\n  rwmode,\r\n} = styles;\r\n\r\nexport default Stickynotes ","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"stickynotes_container__A8pay\",\"stickybtns\":\"stickynotes_stickybtns__QUX7p\",\"addnote\":\"stickynotes_addnote__kQWef\",\"removenote\":\"stickynotes_removenote__tTr06\",\"stickynote\":\"stickynotes_stickynote__SYtRL\",\"grid\":\"stickynotes_grid__k-alA\",\"buttons\":\"stickynotes_buttons__ioDRg\",\"closebtn\":\"stickynotes_closebtn__t9DM-\",\"pointer\":\"stickynotes_pointer__tbxnP\",\"rwmode\":\"stickynotes_rwmode__Zcz0r\",\"disableEditTxt\":\"stickynotes_disableEditTxt__gZzhF\",\"enableEditTxt\":\"stickynotes_enableEditTxt__lpqrS\"};"],"names":["aboutContainer","aboutHeader","arrow","aboutContent","_ref","aboutHidden","state","setState","useState","_jsx","_Fragment","children","_jsxs","className","onClick","prevState","style","color","stickynote","grid","container","stickybtns","addnote","removenote","buttons","disableEditTxt","enableEditTxt","rwmode","Stickynotes","handleKeyDown","handleSwitch","deleteNote","removestickynotes","addNote","saveNote","handleDrop","handleDragStart","useStickyNotes","stickynotes","id","notes","tiltdeg","notefull","editmode","draggedItem","writable","dragItemId","genRandomNum","min","max","Math","floor","random","useEffect","_localStorage","lsString","localStorage","getItem","localState","JSON","parse","e","key","preventDefault","mode","response","window","confirm","filter","target","setItem","stringify","removeItem","_tempStickynotes","length","alert","noteColors","tilts","toString","tempStickynotes","sort","a","b","Number","lastId","String","parseInt","selectedStickyNote","find","innerText","HTMLElement","classList","remove","tempState","draggedIndex","findIndex","item","droppedIndex","droppedItem","splice","prev","About","Switch","checked","onChange","inputProps","map","tiltangle","Fragment","role","draggable","onDragStart","onDrop","onDoubleClick","onDragOver","transform","backgroundColor","onFocus","onBlur","contentEditable","onKeyDown","suppressContentEditableWarning","title"],"sourceRoot":""}