{"version":3,"file":"static/js/84.cc9171bc.chunk.js","mappings":"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","sources":["pages/World/useDebounce.ts","pages/World/useFetch.ts","pages/World/UseCountryInfo.ts","pages/World/About.tsx","webpack://portfolio/./src/pages/World/about.module.css?0d4b","pages/World/World.tsx","webpack://portfolio/./src/pages/World/world.module.css?0faf"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nexport const useDebounce = (inputValue:string, delay = 600) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(inputValue)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(inputValue)\r\n    }, delay)\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      setDebouncedValue('');\r\n    }\r\n  }, [inputValue, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useFetch = (country: string) => {\r\n  const [state, setState] = useState({\r\n    response: [],\r\n    error: false,\r\n    errorMsg: '',\r\n    loading: true,\r\n  })\r\n\r\n  const fetchAPI = async () => {\r\n    if (!country) {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          loading: false,\r\n          response: [],\r\n        }\r\n      })\r\n      return false\r\n    }\r\n    try {\r\n      const header = await fetch(\r\n        `https://restcountries.com/v3.1/name/${country}`,\r\n      )\r\n      if (!header?.ok) {\r\n        throw new Error('header.status')\r\n      }\r\n      const response = await header.json()\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          response,\r\n          loading: false,\r\n        }\r\n      })\r\n    } catch ({ name, message }:any) {\r\n      setState((prevState:any) => {\r\n        return {\r\n          ...prevState,\r\n          response: [],\r\n          error: true,\r\n          errorMsg: message,\r\n          loading: false,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAPI()\r\n    return () => {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          response: [],\r\n          error: false,\r\n          errorMsg: '',\r\n          loading: false,\r\n        }\r\n      })\r\n    }\r\n  }, [country])\r\n\r\n  return {\r\n    fetchAPI,\r\n    response: state.response,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    errorMsg: state.errorMsg,\r\n  }\r\n}\r\n\r\nexport default useFetch\r\n","import React, { useState } from 'react'\r\nimport { useDebounce } from './useDebounce'\r\nimport useFetch from './useFetch'\r\nimport { ResponseType } from './types'\r\n\r\nexport const UseCountryInfo = () => {\r\n  const [state, setState] = useState({\r\n    response: [],\r\n    error: false,\r\n    errorMsg: '',\r\n    loading: true,\r\n    userInputTxt: '',\r\n  })\r\n\r\n  const debouncedValue = useDebounce(state.userInputTxt, 500); //Debounce feature is incorporated in this Custom Hook\r\n\r\n  const { response, error, errorMsg, loading } = useFetch(debouncedValue); //Fetch API feature is encapsulted in this Custom Hook\r\n\r\n  const getUserInputTxt = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          userInputTxt: e.target.value,\r\n        }\r\n      })\r\n  }\r\n\r\n  function responseOkay(state: ResponseType) { //ResponseType spcified the type for the State\r\n    return state.userInputTxt && state.userInputTxt.length > 0\r\n  }\r\n\r\n  return {\r\n    state,\r\n    setState,\r\n    getUserInputTxt,\r\n    debouncedValue,\r\n    response,\r\n    error,\r\n    errorMsg,\r\n    loading,\r\n    responseOkay,\r\n  }\r\n}\r\n","import { useState } from 'react'\r\nimport styles from './about.module.css'\r\n\r\nconst { aboutContainer, aboutHeader, arrow, aboutContent } = styles\r\n\r\nfunction About() {\r\n  const [state, setState] = useState({\r\n    aboutHidden: true,\r\n  })\r\n\r\n  function toggleContent() {\r\n    setState((prevState) => {\r\n      return {\r\n        aboutHidden: !prevState.aboutHidden,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={aboutContainer}>\r\n        <div onClick={toggleContent}>\r\n          {state.aboutHidden && <span className={arrow}>▶</span>}\r\n          {!state.aboutHidden && <span className={arrow}>▼</span>}\r\n          <span className={aboutHeader}>World Info App</span>\r\n        </div>\r\n        {!state.aboutHidden && (\r\n          <div className={aboutContent}>\r\n            <p>\r\n              <strong>\r\n                This web-based app is developed in{' '}\r\n                <span style={{ color: 'blue' }}>ReactJs</span> with TypeScript.\r\n              </strong>\r\n            </p>\r\n            <p>\r\n              This is to demo a search feature to fetch a user typed country info from a free-to-use API.\r\n              <br/> Debounce concept is incorporated to improve the performance of the search.\r\n\r\n            </p>\r\n            <p>\r\n              The following ReactJs features are used to develop this app:\r\n            </p>\r\n              <ul>\r\n                <li>\r\n                  (a) Native fetch is used to fetch a free-to-use api from a\r\n                  remote server\r\n                </li>\r\n                <li>\r\n                  (b) Debounce feature is encapsulated into a React custom hook,\r\n                  to prevent making api request on each letter typed by the user\r\n                </li>\r\n                <li>(e) CSS Module is used for styling the application</li>\r\n                <li>\r\n                  (f) CSS flex is used to style the card and make it\r\n                  responsive across devices\r\n                </li>\r\n              </ul>\r\n             \r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutContainer\":\"about_aboutContainer__r8yoZ\",\"aboutContent\":\"about_aboutContent__72ASG\",\"aboutHeader\":\"about_aboutHeader__b4077\",\"arrow\":\"about_arrow__lQaaB\",\"codeLink\":\"about_codeLink__xyTSU\"};","import { Fragment } from 'react'\r\nimport { UseCountryInfo } from './UseCountryInfo'\r\nimport { WorldProps } from './types'\r\nimport styles from './world.module.css'\r\nimport About from './About'\r\n\r\nfunction World() {\r\n  const { getUserInputTxt, response, error, loading } = UseCountryInfo()\r\n  //All functions are encapsulted in the above Custom Hook\r\n\r\n  return (\r\n    <>\r\n      <About />\r\n      <Fragment>\r\n        <div className={container}>\r\n          {error && (\r\n            <div className={errorTxt}>Invalid or Empty Country Name!</div>\r\n          )}\r\n          {loading && <h2>Loading...</h2>}\r\n\r\n          <div className={searchContainer}>\r\n            <label className={inputLabel}>Type a Country Name</label>\r\n            <input\r\n              className={textInput}\r\n              type=\"text\"\r\n              autoFocus\r\n              onChange={getUserInputTxt}\r\n              value={userInputTxt}\r\n              placeholder=\"eg. type usa\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {response.length > 0 &&\r\n              response?.map((row, index) => {\r\n                return <Row key={index} row={row} index={index} />\r\n              })}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    </>\r\n  )\r\n\r\n  function Row({ row, row: { name, capital, population }, index }: WorldProps) {\r\n    return (\r\n      <Fragment key={index}>\r\n        <div className={card}>\r\n          <div className={infoContainer}>\r\n            <div className={cardHeader}>{name.official}</div>\r\n            <div className={infoText}>\r\n              <strong>Capital:</strong>\r\n              {capital && capital[0]}\r\n            </div>\r\n            <div className={infoText}>\r\n              <strong>Population:</strong>\r\n              {population.toLocaleString('en-US')}\r\n            </div>\r\n\r\n            <div className={infoText}>\r\n              <strong>Map:</strong>\r\n              <a\r\n                className={mapLink}\r\n                href={row.maps.googleMaps}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                View in Google Map\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <img className={image} alt=\"flag\" src={row.flags.png} />\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst {\r\n  container,\r\n  searchContainer,\r\n  inputLabel,\r\n  textInput,\r\n  userInputTxt,\r\n  card,\r\n  infoContainer,\r\n  cardHeader,\r\n  infoText,\r\n  mapLink,\r\n  image,\r\n  errorTxt,\r\n} = styles //fetching the styles from css module\r\n\r\n\r\nexport default World\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"world_container__LEig4\",\"textInput\":\"world_textInput__r8duY\",\"inputLabel\":\"world_inputLabel__mMBrI\",\"image\":\"world_image__uE6sC\",\"card\":\"world_card__Eiul2\",\"cardHeader\":\"world_cardHeader__YZ+rl\",\"infoContainer\":\"world_infoContainer__FB+jn\",\"infoText\":\"world_infoText__Pk-N9\",\"errorTxt\":\"world_errorTxt__4X9fd\",\"mapLink\":\"world_mapLink__WQrL-\",\"searchContainer\":\"world_searchContainer__XnNcG\"};"],"names":["country","state","setState","useState","response","error","errorMsg","loading","fetchAPI","async","prevState","header","fetch","ok","Error","json","name","message","useEffect","UseCountryInfo","userInputTxt","debouncedValue","inputValue","delay","arguments","length","undefined","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","useFetch","getUserInputTxt","e","target","value","responseOkay","aboutContainer","aboutHeader","arrow","aboutContent","aboutHidden","_jsx","_Fragment","children","_jsxs","className","onClick","style","color","container","searchContainer","inputLabel","textInput","card","infoContainer","cardHeader","infoText","mapLink","image","errorTxt","About","Fragment","type","autoFocus","onChange","placeholder","map","row","index","Row","_ref","capital","population","official","toLocaleString","href","maps","googleMaps","rel","alt","src","flags","png"],"sourceRoot":""}