{"version":3,"file":"static/js/557.7ee85381.chunk.js","mappings":"iJACA,M,s2XCUA,MAmHM,UAACA,EAAWC,OAAM,WAAEC,EAAQ,SAAEC,EAAQ,OAAEC,EAAM,MAAEC,EAAK,IAAEC,GD7H7D,CAAgB,UAAY,8BAA8B,OAAS,2BAA2B,SAAW,6BAA6B,SAAW,6BAA6B,OAAS,2BAA2B,MAAQ,0BAA0B,IAAM,yBC+H1P,EArHmBC,KAEf,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,CAACA,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,GAC3CJ,MAAO,CAACD,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,GAC3CC,aAAc,EACdC,aAAc,EACdC,SAAS,EACTC,YAAY,EACZC,aAAY,EACZC,UAAS,IAGLC,EAAeA,CAACC,EAAalB,IAC1BmB,KAAKC,MAAMD,KAAKE,UAAYrB,EAAMkB,EAAM,IAAMA,EAkDrDI,EAAOpB,EAAMG,MAAMH,EAAMS,cACzBY,EAAOrB,EAAMI,MAAMJ,EAAMU,cAG/B,OAAOY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACLC,EAAAA,EAAAA,MAAA,OAAKC,UAAWlC,EAAUgC,SAAA,EAItBC,EAAAA,EAAAA,MAAA,OAAKC,UAAW9B,EAAO4B,SAAA,CAAC,kBAAkBxB,EAAMY,YAAY,2CAE5DU,EAAAA,EAAAA,KAAA,OAAMK,KAAK,QAAQD,UAAW/B,EAAS6B,SAErCxB,EAAMS,aAAaT,EAAMU,eAAkB,KAAOV,EAAMW,UAClDW,EAAAA,EAAAA,KAAA,OAAAE,SAAK,uBAOdxB,EAAMW,SAAUW,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACfC,EAAAA,EAAAA,MAAA,OAAKC,UAAWhC,EAAS8B,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,cAAcC,MAAM,MAAMC,IAAKC,OAE1CT,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,cAAcC,MAAM,MAAMC,IAAKC,YAK1CT,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWhC,EAAS8B,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAAE,UACAF,EAAAA,EAAAA,KAAA,OAAKQ,IAAKV,EAAMS,MAAM,KAAKD,IAAI,kBAE/BN,EAAAA,EAAAA,KAAA,OAAAE,UACAF,EAAAA,EAAAA,KAAA,OAAKQ,IAAKT,EAAMQ,MAAM,KAAKD,IAAI,uBAMrCN,EAAAA,EAAAA,KAAA,OAAKI,UAAWhC,EAAS8B,UACvBF,EAAAA,EAAAA,KAAA,UAAQU,SAAUhC,EAAMa,YAAaa,UAAWjC,EAAQwC,QA5FzCC,KACf,IAAItB,EACAE,EAEJb,GAAUkC,IAEJA,EAAUvB,aAAa,IACzBwB,MAAM,sCACNtB,GAAS,EACTF,GAAa,GAGXZ,EAAMS,aAAaT,EAAMU,eAAe,IAC1CE,EAAY,EACZE,GAAS,GAGTF,EAAYuB,EAAUvB,YAEjB,IACFuB,EACHxB,SAAS,EACTC,cACAC,aAAY,EACZC,UAAS,MAIbuB,YAAW,KACT,IAAI5B,EAAeM,EAAa,EAAG,GAC/BL,EAAaK,EAAa,EAAE,GAEhCd,GAAUkC,IAED,IACFA,EACH1B,eACAC,eACAC,SAAS,EACTE,aAAY,EACZD,YAAYuB,EAAUvB,YAAc,KAEtC,GACD,IAAK,EAiDkEY,SAAC,oBAG5E,C","sources":["webpack://portfolio/./src/pages/diceroller/diceroller.module.css?356a","pages/diceroller/DiceRoller.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"diceroller_container__Sn+Tt\",\"button\":\"diceroller_button__K029W\",\"dicearea\":\"diceroller_dicearea__5euhK\",\"congrats\":\"diceroller_congrats__4Csez\",\"rolled\":\"diceroller_rolled__aUJY2\",\"total\":\"diceroller_total__zUXQw\",\"max\":\"diceroller_max__ZGJL3\"};","import { useState, useEffect } from 'react';\r\nimport styles from './diceroller.module.css';\r\nimport diceRolling from '../../assets/images/dicerolling.gif';\r\n\r\nimport dice1 from '../../assets/images/dice1.png';\r\nimport dice2 from '../../assets/images/dice2.png';\r\nimport dice3 from '../../assets/images/dice3.png'\r\nimport dice4 from '../../assets/images/dice4.png';\r\nimport dice5 from '../../assets/images/dice5.png';\r\nimport dice6 from '../../assets/images/dice6.png'\r\n\r\nconst DiceRoller = () => {\r\n\r\n    const [state, setState] = useState({\r\n        dice1: [dice1, dice2, dice3, dice4, dice5, dice6],\r\n        dice2: [dice1, dice2, dice3, dice4, dice5, dice6],\r\n        activeIndex1: 1,\r\n        activeIndex2: 2,\r\n        rolling: false,\r\n        rolledTimes:0,\r\n        btnDisabled:false,\r\n        gameOver:false\r\n      });\r\n    \r\n      const genRandomNum = (min: number, max: number) => {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n      };\r\n\r\n      const rollDice = () => {\r\n        let rolledTimes:number;\r\n        let gameOver:boolean;\r\n      \r\n        setState((prevState: any) => {\r\n          \r\n          if (prevState.rolledTimes>=20){\r\n            alert(\"Max Times 20 Completed, Game Over!\")\r\n            gameOver=false;\r\n            rolledTimes=-1;\r\n          }\r\n          else\r\n          if (state.activeIndex1+state.activeIndex2===10){\r\n            rolledTimes=0;\r\n            gameOver=true\r\n          }\r\n          else {\r\n            rolledTimes=prevState.rolledTimes\r\n          }\r\n          return {\r\n            ...prevState,\r\n            rolling: true,\r\n            rolledTimes,\r\n            btnDisabled:true,\r\n            gameOver:true\r\n          };\r\n        });\r\n\r\n        setTimeout(() => {\r\n          let activeIndex1 = genRandomNum(0, 5);\r\n          let activeIndex2=genRandomNum(0,5);\r\n    \r\n          setState((prevState: any) => {\r\n          \r\n            return {\r\n              ...prevState,\r\n              activeIndex1,\r\n              activeIndex2,\r\n              rolling: false,\r\n              btnDisabled:false,\r\n              rolledTimes:prevState.rolledTimes + 1\r\n            };\r\n          });\r\n        }, 1000);\r\n      };\r\n  \r\n    \r\n  const src1 = state.dice1[state.activeIndex1];\r\n  const src2 = state.dice2[state.activeIndex2];\r\n\r\n\r\n  return <>\r\n    <div className={container}>\r\n\r\n\r\n\r\n        <div className={rolled}>Dice Rolled&nbsp;{state.rolledTimes}\r\n        &nbsp;Times to Attain a Total of&nbsp;12</div>\r\n        <div  role=\"alert\" className={congrats}>\r\n\r\n        {(state.activeIndex1+state.activeIndex2) === 10 && !state.rolling \r\n        && (    <div>Congratulations!</div>\r\n        )\r\n        }\r\n        \r\n\r\n          </div>\r\n      \r\n      {state.rolling ? <>\r\n        <div className={dicearea}>\r\n        <div>\r\n          <img alt=\"dicerolling\" width=\"100\" src={diceRolling} />\r\n        </div>\r\n        <div>\r\n          <img alt=\"dicerolling\" width=\"100\" src={diceRolling} />\r\n        </div>\r\n        </div>\r\n         \r\n         </> : (\r\n        <>\r\n          <div className={dicearea}>\r\n            <div>\r\n            <img src={src1} width=\"70\" alt=\"diceresult\" />\r\n            </div>\r\n            <div>\r\n            <img src={src2} width=\"70\" alt=\"diceresult\" />\r\n            </div>\r\n          </div>\r\n         \r\n        </>\r\n      )}\r\n      <div className={dicearea}>\r\n        <button disabled={state.btnDisabled} className={button} onClick={rollDice}>Roll Dice</button>\r\n      </div>\r\n    </div>\r\n    </>\r\n}\r\n\r\nconst {container, button, dicearea, congrats, rolled, total, max}=styles;\r\n\r\nexport default DiceRoller"],"names":["container","button","dicearea","congrats","rolled","total","max","DiceRoller","state","setState","useState","dice1","dice2","dice3","dice4","dice5","dice6","activeIndex1","activeIndex2","rolling","rolledTimes","btnDisabled","gameOver","genRandomNum","min","Math","floor","random","src1","src2","_jsx","_Fragment","children","_jsxs","className","role","alt","width","src","diceRolling","disabled","onClick","rollDice","prevState","alert","setTimeout"],"sourceRoot":""}