{"version":3,"file":"static/js/297.3ef4bbea.chunk.js","mappings":"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","sources":["pages/Home/Home.tsx","webpack://portfolio/./src/pages/Home/home.module.css?7b1b"],"sourcesContent":["import React, { Fragment, useContext } from \"react\";\r\nimport styles from \"./home.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ScreenMode } from \"../../App\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const screenModeContext: any = useContext(ScreenMode);\r\n\r\n  const toggleScreenMode = () => {\r\n    document.body.style.backgroundColor = \"green\";\r\n    console.log(document.body.style.backgroundColor);\r\n\r\n    screenModeContext.setState((prevState: { screenmode: string }) => {\r\n      return {\r\n        ...prevState,\r\n        screenmode: prevState.screenmode === \"dark\" ? \"light\" : \"dark\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const apps = [\r\n    {\r\n      title: \"Sticky Notes\",\r\n      url: \"/stickynotes\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            This React application mimics the{\" \"}\r\n            <span>classic Sticky Note experience</span>. Users can freely create\r\n            a sticky note and enter any text. It can be easily edited and\r\n            deleted.\r\n          </p>\r\n          <p>\r\n            <span>\r\n              It is automatically saved when the user clicks outside the sticky\r\n              note.\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              When the page is refreshed, the saved notes are retrieved\r\n            </span>\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Online Shopping\",\r\n      url: \"/shopping\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            This is to demo an <span>Online Shopping</span> feature.\r\n          </p>\r\n          <p>\r\n            It fetches a free-to-use products <span>API data</span> from a{\" \"}\r\n            <span>remote server</span> using <br />\r\n            <span>React Tookit and RTK Query</span>.\r\n          </p>\r\n          <p>\r\n            <span>RTK CreateSlice</span> is used to manage the state of the\r\n            shopping cart.\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Managing Large Data Sets\",\r\n      url: \"/lgdatatable\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            Using Virtualized Table, React app efficiently handles large data\r\n            sets of data\r\n          </p>\r\n\r\n          <p>\r\n            This ReactJS table is handling <span>100,000</span> rows with smooth\r\n            scrolling by using the virtualization feature\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n    {\r\n      title: \"SSR with NextJs & PostGreSQL on AWS\",\r\n      url: \"/ssr\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            This <span>Next.js</span> application hosted on <span>AWS</span>, utilizes the{\" \"}\r\n            <span>App Router feature</span>. It sends an HTTP request to it's\r\n            backend server. The server queries the <span>PostgreSQL</span>{\" \"}\r\n            database to retrieve the product list, renders it server-side, and\r\n            sends it to the client.\r\n          </p>\r\n          <p>\r\n            Upon reaching the client, the data is hydrated, and the 'Add to\r\n            Cart' button becomes active\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n    /*\r\nThis demo illustrates the micro frontend design pattern using Module Federation. A React container application dynamically imports two independent React applications, each developed and deployed separately in the AWS Cloud. The combined application showcases seamless integration and unified display of these micro frontends on a single page, highlighting the benefits of modularity, scalability, and independent deployment.\r\n    */\r\n// {\r\n//   title: \"Micro Frontend using Module Federation\",\r\n//   url: \"/ssr\",\r\n//   description: (\r\n//     <Fragment>\r\n//       <p>\r\n//       This demo illustrates the <span>Micro Frontend</span> design pattern using <span>Module Federation</span>. \r\n      \r\n//       <p>A React container application dynamically imports two independent React applications, \r\n//       each developed and deployed separately in the <span>AWS Cloud</span>\r\n//       </p>\r\n      \r\n//       </p>\r\n     \r\n//     </Fragment>\r\n//   ),\r\n// },\r\n    {\r\n      title: \"Custom Grid\",\r\n      url: \"/grid\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            Grid is used to display the data in tabular format which has rows\r\n            and columns.\r\n          </p>\r\n          <p>\r\n            Users can edit the field like an <span>Excel Sheet</span> by\r\n            directly clicking on the cell. This also has Add and Sort feature.\r\n          </p>\r\n          <p>\r\n            <span>CSS Grid</span> is used to display the grid layout\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n\r\n   \r\n \r\n    {\r\n      title: \"MERN Application on Vercel\",\r\n      url: \"/mern\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            This is a <span>Node.js</span>, <span>Express</span>,{\" \"}\r\n            <span>MongoDB</span>, <span>ReactJs</span>\r\n            &nbsp;application hosted on <span>Vercel Cloud Platform </span>.\r\n          </p>\r\n          <p>\r\n            This application uses React on the front end and built using Node.js\r\n            and Express on the server-side logic. Data is managed and stored in\r\n            a MongoDB database.\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n   \r\n    {\r\n      title: \"Tic-Tac-Toe\",\r\n      url: \"/tictactoe\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            The Tic-Tac-Toe game is a classic, <br />\r\n            <span>two-player game</span> where users take turns marking spaces\r\n            on a 3x3 grid.\r\n          </p>\r\n          <p>\r\n            Players can choose to play as X or O, with the goal of getting three\r\n            in a row <span>horizontally</span>,<span> vertically</span>, or{\" \"}\r\n            <span>diagonally</span>.\r\n          </p>\r\n          <p>\r\n            <span>\r\n              The game automatically detects wins and draws, and allows players\r\n              to restart at any time.\r\n            </span>\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n   \r\n  \r\n\r\n \r\n    {\r\n      title: \"World Info\",\r\n      url: \"/world\",\r\n\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            This is to demo a <span>Search feature</span> which fetches the\r\n            details of a user typed country from a free-to-use API.\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <span>Debounce feature</span> is incorporated to improve the\r\n            performance of the search.\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n    \r\n    {\r\n      title: \"Dice Roller App\",\r\n      url: \"/diceroller\",\r\n\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            This <span></span>React app simulates a two-dice roll. Each time you\r\n            click the button, it generates random numbers for both dice and\r\n            displays the corresponding dice faces.\r\n          </p>\r\n          <p>\r\n            It counts each dice roll and tracks the total until both dice show 6\r\n            simultaneously or max attempts reaches 20.\r\n          </p>\r\n          {/* <p>\r\n            The app features a mix of animated and static dice images, creating\r\n            a dynamic and engaging experience.\r\n          </p> */}\r\n        </Fragment>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"To Do\",\r\n      url: \"/todo\",\r\n      description: (\r\n        <Fragment>\r\n          <p>To Do app is used to maintain our day-to-day tasks.</p>\r\n          <p>\r\n            User can type a task and it will be listed under{\" \"}\r\n            <span>Active Todo</span> category.\r\n          </p>\r\n          <p>\r\n            Once the task is completed, user can click on the checkbox. The\r\n            completed Todo task will be moved to the <span>Completed Todo</span>{\" \"}\r\n            category.\r\n          </p>\r\n          .\r\n        </Fragment>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Article in Medium\",\r\n      url: \"https://medium.com/@noothankrishnan_88771/reactjs-patterns-for-delightful-dx-68a7ec795b70\",\r\n      description: (\r\n        <Fragment>\r\n          <p>\r\n            <span>ReactJs Patterns for Delightful DX</span>\r\n          </p>\r\n          <p>\r\n            This is an article in <span>Medium</span> which helps to write{\" \"}\r\n            <span>consistent, readable and maintainable ReactJs code</span> to\r\n            provide a delightful developer experience.\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Form Handling\",\r\n      url: \"/formhandling\",\r\n      description: (\r\n        <Fragment>\r\n          <p>This is to demo the form handling feature in ReactJs.</p>\r\n          <p>\r\n            It manages\r\n            <span>\r\n              Textboxes, Radio Buttons, Checkboxes, Drop Down List, Textarea\r\n            </span>{\" \"}\r\n            and validates when user submit the form.\r\n          </p>\r\n        </Fragment>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const doNavigate = (url: any) => {\r\n    if (url.includes(\"http\")) {\r\n      window.open(url);\r\n    } else {\r\n      navigate(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={pageHeader}>ReactJs Applications</div>\r\n      <div className={hiLites}>\r\n        <div className={hlTitle}>Tech Stacks and features used to develop these Apps</div>\r\n        <div className={hlGrid}>\r\n          <ul>\r\n            <li>ReactJs Library</li>\r\n            <li>Redux/RTK Query</li>\r\n            <li>Redux Saga</li>\r\n          </ul>\r\n         \r\n          <ul>\r\n            <li>React Router</li>\r\n            <li>Custom Hooks</li>\r\n            <li>React Virtualization</li>\r\n          </ul>\r\n          <ul>\r\n            <li>TypeScript</li>\r\n            <li>ES6/JavaScript</li>\r\n            <li>CSS Module</li>\r\n          </ul>\r\n          <ul>\r\n            <li>React Testing Library</li>\r\n            <li>Jest</li>\r\n          <li>Mock Service Worker</li>\r\n\r\n          </ul>\r\n          <ul>\r\n            <li>NextJs Framework</li>\r\n            <li>AWS Cloud</li>\r\n            <li>PostGreSQL</li>\r\n          </ul>\r\n          <ul>\r\n            <li>NodeJs</li>\r\n            <li>Express</li>\r\n            <li>MongoDB</li>\r\n          </ul>\r\n       \r\n         \r\n          {/* <ul>\r\n            <li>Git</li>\r\n            <li>GitHub</li>\r\n          </ul> */}\r\n          {/* <ul>\r\n            <li>Git/Github</li>\r\n            <li>ES6/JavaScript</li>\r\n          </ul> */}\r\n          {/* <ul>\r\n            <li>Responsive Web</li>\r\n            <li>ES6/JavaScript</li>\r\n          </ul> */}\r\n          {/* <ul>\r\n            <li>Redux</li>\r\n            <li>Redux Toolkit</li>\r\n          </ul>\r\n         \r\n          <ul>\r\n            <li>Virtualized Table</li>\r\n            <li>RTK Query</li>\r\n          </ul> */}\r\n          {/* <ul>\r\n            <li>NextJs</li>\r\n            <li>ServerSide Rendering</li>\r\n          </ul> */}\r\n          {/* <ul>\r\n            <li>CSS Module</li>\r\n            <li>NextJs </li>\r\n          </ul>\r\n          <ul>\r\n            <li>NodeJs</li>\r\n            <li>Express</li>\r\n          </ul>\r\n          <ul>\r\n            <li>PostGreSQL</li>\r\n            <li>Express</li>\r\n          </ul> */}\r\n        </div>\r\n      </div>\r\n      <div className={grid}>\r\n        {apps.map((app, index) => {\r\n          return (\r\n            <Fragment key={index}>\r\n              <>\r\n                <div\r\n                  title={`Navigate to ${app.title} page`}\r\n                  onClick={() => doNavigate(app.url)}\r\n                  className={card}\r\n                >\r\n                  <div className={title}>{app.title}</div>\r\n                  <div>\r\n                    <div className={content}>{app.description}</div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst {\r\n  grid,\r\n  title,\r\n  content,\r\n  card,\r\n  header,\r\n  externalLink,\r\n  pageHeader,\r\n  light,\r\n  dark,\r\n  hiLites,\r\n  hlTitle,\r\n  hlGrid,\r\n} = styles;\r\n\r\nexport default Home;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"home_container__RzK4B\",\"header\":\"home_header__HJLeC\",\"externalLink\":\"home_externalLink__g163m\",\"grid\":\"home_grid__gEPjM\",\"card\":\"home_card__OesK7\",\"title\":\"home_title__PK7E8\",\"content\":\"home_content__SBCPJ\",\"pageHeader\":\"home_pageHeader__-B+sW\",\"light\":\"home_light__WusHb\",\"dark\":\"home_dark__CKg-m\",\"hlTitle\":\"home_hlTitle__gnWSP\",\"hiLites\":\"home_hiLites__aod99\",\"hlGrid\":\"home_hlGrid__YxrdB\"};"],"names":["grid","title","content","card","header","externalLink","pageHeader","light","dark","hiLites","hlTitle","hlGrid","Home","navigate","useNavigate","apps","useContext","ScreenMode","url","description","_jsxs","Fragment","children","_jsx","className","map","app","index","_Fragment","onClick","includes","window","open"],"sourceRoot":""}