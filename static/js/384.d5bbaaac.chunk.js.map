{"version":3,"file":"static/js/384.d5bbaaac.chunk.js","mappings":"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","sources":["pages/ToDo/About.tsx","webpack://portfolio/./src/pages/ToDo/about.module.css?7e08","pages/ToDo/ToDo.tsx","webpack://portfolio/./src/pages/ToDo/todo.module.css?77bb","pages/ToDo/useToDo.ts"],"sourcesContent":["import { useState } from 'react'\r\nimport styles from './about.module.css'\r\n\r\nconst { aboutContainer, aboutHeader, arrow, aboutContent } = styles\r\n\r\nfunction About() {\r\n  const [state, setState] = useState({\r\n    aboutHidden: true,\r\n  })\r\n\r\n  function toggleContent() {\r\n    setState((prevState) => {\r\n      return {\r\n        aboutHidden: !prevState.aboutHidden,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={aboutContainer}>\r\n        <div onClick={toggleContent}>\r\n          {state.aboutHidden && <span className={arrow}>‚ñ∂</span>}\r\n          {!state.aboutHidden && <span className={arrow}>‚ñº</span>}\r\n          <span className={aboutHeader}>ToDo App</span>\r\n        </div>\r\n        {!state.aboutHidden && (\r\n          <div className={aboutContent}>\r\n            <p>\r\n              <strong>\r\n                This web-based app is developed in{' '}\r\n                <span style={{ color: 'blue' }}>ReactJs</span> with TypeScript.\r\n              </strong>\r\n            </p>\r\n            <p>\r\n              This is a ToDo App. User can type a task/reminder and it will be listed under Active Todo category.\r\n              Once the task is completed, user can click on the checkbox. The completed Todo task\r\n              will be listed under the Completed Todo category. This is to demo the state and event \r\n              management features like Checkbox handling and ES6 features of ReactJs\r\n            </p>\r\n           \r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutContainer\":\"about_aboutContainer__T20HW\",\"aboutContent\":\"about_aboutContent__sNocI\",\"aboutHeader\":\"about_aboutHeader__5GEFr\",\"arrow\":\"about_arrow__RN+vK\",\"codeLink\":\"about_codeLink__G4ooj\"};","import { useRef, MutableRefObject } from 'react'\r\n\r\nimport styles from './todo.module.css'\r\nimport { useToDo } from './useToDo'\r\nimport About from './About'\r\nimport { ToDoListProp, ToDoType } from './types'\r\n\r\nconst ToDo = () => {\r\n  const inputTxt: MutableRefObject<null> = useRef(null);\r\n\r\n  const {\r\n    state,\r\n    addToDo,\r\n    handleEnter,\r\n    updateCheckbox,\r\n    deleteRow,\r\n  } = useToDo(inputTxt);\r\n\r\n  const ToDoList = ({ complete, header }: ToDoListProp) => {\r\n    return (\r\n      <div className={todoGrid}>\r\n        {state.todoListArr\r\n          .filter((row: ToDoType) => {\r\n            if (complete) return row.completed === false\r\n            else return row.completed === true\r\n          })\r\n          .map((row: ToDoType) => {\r\n            return (\r\n              <div className={card} key={row.id}>\r\n                <div>\r\n                  <input\r\n                    data-testid=\"checkbox\"\r\n                    id={row.id}\r\n                    onChange={updateCheckbox}\r\n                    type=\"checkbox\"\r\n                    checked={row.completed}\r\n                  />\r\n                </div>\r\n                <div className={`${header}__todo`} id={row.id} onClick={updateCheckbox}>\r\n                  {row.todo}\r\n                </div>\r\n                <div id={row.id} onClick={deleteRow} className={trash}>\r\n                  üóëÔ∏è\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <About />\r\n      <div className={container}>\r\n        <div>\r\n          <input\r\n            className={userInput}\r\n            onKeyUp={handleEnter}\r\n            ref={inputTxt}\r\n            type=\"text\"\r\n            autoFocus\r\n            name=\"the-inputs-id\"\r\n          />\r\n          <button onClick={addToDo} className={tdButton}>\r\n            Add\r\n          </button>\r\n        </div>\r\n        <div id=\"pending\" className={greenHdr}>Active Todo</div>\r\n        <div>\r\n          <ToDoList complete header=\"greenHdr\" />\r\n        </div>\r\n        <div id=\"completed\" className={maroonHdr}>Completed Todo</div>\r\n        <div>\r\n          <ToDoList complete={false} header=\"maroonHdr\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst {\r\n  container,\r\n  tdButton,\r\n  todoGrid,\r\n  todo,\r\n  userInput,\r\n  card,\r\n  greenHdr,\r\n  trash,\r\n  maroonHdr,\r\n  greenHdr__todo\r\n} = styles\r\n\r\nexport default ToDo\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"todo_container__h0Zhs\",\"tdButton\":\"todo_tdButton__HnseP\",\"todoGrid\":\"todo_todoGrid__n4kVQ\",\"greenHdr\":\"todo_greenHdr__eKa3o\",\"maroonHdr\":\"todo_maroonHdr__z1xB+\",\"trash\":\"todo_trash__KoRNT\",\"card\":\"todo_card__uPRf9\",\"todo\":\"todo_todo__HrGJx\",\"userInput\":\"todo_userInput__UvlyS\"};","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport const useToDo = (inputTxt: any) => {\r\n  let todoObj = {\r\n    id: '',\r\n    todo: '',\r\n    completed: false,\r\n  }\r\n\r\n  type TypeToDoObj ={\r\n    id: string,\r\n    todo: string,\r\n    completed: boolean,\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    activeTab: 1,\r\n    activeTotal: 0,\r\n    completedTotal: 0,\r\n    todoListArr: [],\r\n  })\r\n\r\n  const deleteRow = (e: React.MouseEventHandler<HTMLDivElement> | any) => {\r\n    const tempState: any = { ...state }\r\n\r\n    const todoListArr = tempState.todoListArr.filter((row: any) => {\r\n      return row.id !== e.target.id\r\n    })\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        todoListArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEnter = (e: any) => {\r\n    if (e.code === 'Enter') {\r\n      addToDo(e)\r\n    }\r\n  }\r\n\r\n  const updateTab = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        activeTab: parseInt(e.target.id),\r\n      }\r\n    })\r\n  }\r\n\r\n  const updateCheckbox = (e:any) => {\r\n    const tempState = { ...state }\r\n\r\n    const selectedObj:TypeToDoObj|any= tempState.todoListArr.find(\r\n      (row: TypeToDoObj) => {\r\n        return row.id === e.target.id\r\n      },\r\n    )\r\n\r\n    selectedObj.completed = !selectedObj?.completed\r\n\r\n    setState((prevState: any) => {\r\n      return {\r\n        ...prevState,\r\n        todoListArr: tempState.todoListArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  const addToDo = (e: any) => {\r\n    if (!inputTxt.current.value) return\r\n\r\n    const tempState = { ...state }\r\n\r\n    const todoListArr: any = tempState.todoListArr\r\n\r\n    todoObj = {\r\n      id:\r\n        !todoListArr || todoListArr.length === 0\r\n          ? '1'\r\n          : (parseInt(todoListArr[todoListArr.length - 1].id) + 1).toString(),\r\n      todo: inputTxt.current.value,\r\n      completed: false,\r\n    }\r\n\r\n    setState((prevState: any) => {\r\n      const todoListArr = [...prevState.todoListArr, todoObj]\r\n      return {\r\n        ...prevState,\r\n        todoListArr,\r\n        activeTotal: prevState.activeTotal + 1,\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (inputTxt && inputTxt.current) inputTxt.current.value = ''\r\n    }\r\n  })\r\n  return {\r\n    addToDo,\r\n    state,\r\n    handleEnter,\r\n    updateCheckbox,\r\n    updateTab,\r\n    deleteRow,\r\n  }\r\n}\r\n"],"names":["aboutContainer","aboutHeader","arrow","aboutContent","state","setState","useState","aboutHidden","_jsx","_Fragment","children","_jsxs","className","onClick","prevState","style","color","container","tdButton","todoGrid","todo","userInput","card","greenHdr","trash","maroonHdr","greenHdr__todo","ToDo","inputTxt","useRef","addToDo","handleEnter","updateCheckbox","deleteRow","todoObj","id","completed","activeTab","activeTotal","completedTotal","todoListArr","e","current","value","length","parseInt","toString","useEffect","code","tempState","selectedObj","find","row","target","updateTab","filter","useToDo","ToDoList","_ref","complete","header","map","onChange","type","checked","About","onKeyUp","ref","autoFocus","name"],"sourceRoot":""}